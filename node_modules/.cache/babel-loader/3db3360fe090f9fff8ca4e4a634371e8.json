{"ast":null,"code":"import _slicedToArray from \"R:\\\\React\\\\foos-test\\\\foos-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"R:\\\\React\\\\foos-test\\\\foos-master\\\\src\\\\components\\\\prevMatches\\\\prevMatches.js\";\nimport \"./_prevMatches.scss\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage,\n        onChangePage = props.onChangePage;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, theme.direction === \"rtl\" ? React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, theme.direction === \"rtl\" ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, theme.direction === \"rtl\" ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, theme.direction === \"rtl\" ? React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500\n  }\n});\nexport default function RenderPrevMatches(props) {\n  const classes = useStyles2();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(10),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const prevMathces = props.matches;\n  let matches = [...prevMathces];\n  matches = matches.filter(match => match.matchOver === true);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, matches.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"custom pagination table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    className: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, (rowsPerPage > 0 ? matches.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : matches).map(m => React.createElement(TableRow, {\n    key: m._id,\n    className: \"white-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, m.teams.blue.players[0].username, \" \", \"&\", \" \", m.teams.blue.players[1].username)), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, m.teams.blue.score, \" \", \" - \", \" \", m.teams.red.score)), React.createElement(TableCell, {\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, m.teams.red.players[0].username, \" \", \"&\", \" \", m.teams.red.players[1].username)))), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, {\n      label: \"All\",\n      value: -1\n    }],\n    colSpan: 3,\n    count: matches.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        \"aria-label\": \"rows per page\"\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["R:/React/foos-test/foos-master/src/components/prevMatches/prevMatches.js"],"names":["React","PropTypes","makeStyles","useTheme","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","useStyles2","table","minWidth","RenderPrevMatches","useState","setPage","setRowsPerPage","prevMathces","matches","filter","match","matchOver","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","m","_id","teams","blue","players","username","score","red","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import \"./_prevMatches.scss\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5)\r\n  }\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = event => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = event => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = event => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = event => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired\r\n};\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500\r\n  }\r\n});\r\n\r\nexport default function RenderPrevMatches(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const { matches: prevMathces } = props;\r\n  let matches = [...prevMathces];\r\n\r\n  matches = matches.filter(match => match.matchOver === true);\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, matches.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody className=\"dark\">\r\n          {(rowsPerPage > 0\r\n            ? matches.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : matches\r\n          ).map(m => (\r\n            <TableRow key={m._id} className=\"white-text\">\r\n              <TableCell align=\"right\">\r\n                <p>\r\n                  {m.teams.blue.players[0].username} {\"&\"}{\" \"}\r\n                  {m.teams.blue.players[1].username}\r\n                </p>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <p>\r\n                  {m.teams.blue.score} {\" - \"} {m.teams.red.score}\r\n                </p>\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n                <p>\r\n                  {m.teams.red.players[0].username} {\"&\"}{\" \"}\r\n                  {m.teams.red.players[1].username}\r\n                </p>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={matches.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}