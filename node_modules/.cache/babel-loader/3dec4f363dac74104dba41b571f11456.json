{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\foos-test\\\\foos-master\\\\src\\\\components\\\\selectPlayers\\\\SelectPlayers.js\";\nimport React, { useEffect } from \"react\";\nimport \"./_selectPlayers.scss\";\nimport Player from \"../player/Player\";\nimport { handleChosenPlayer, setChosenPlayers, shuffling, sortPlayersBy } from \"../../redux/players/player-action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createMatch, removeMatch } from \"../../redux/matches/match-action\";\nimport redShirt from \"../../assets/images/redShirt_large.png\";\nimport blueShirt from \"../../assets/images/blueShirt_large.png\";\nimport startSound from \"../../assets/sounds/startround_01.mp3\";\n\nconst SelectPlayers = props => {\n  const dispatch = useDispatch();\n  const location = props.location;\n  let matches = props.matches;\n\n  let _useSelector = useSelector(state => state.matchReducer),\n      isLoading = _useSelector.isLoading;\n\n  let _useSelector2 = useSelector(state => state.playerReducer),\n      players = _useSelector2.players,\n      chosenPlayerList = _useSelector2.chosenPlayers,\n      isShuffling = _useSelector2.isShuffling,\n      sortBy = _useSelector2.sortBy,\n      departments = _useSelector2.departments;\n\n  let playerList = [...players];\n\n  const filterDepartment = dep => {\n    dispatch(sortPlayersBy(dep));\n  };\n\n  const startRoundMusic = new Audio(startSound);\n  sortBy === \"All\" ? playerList = playerList : playerList = playerList.filter(player => player.department === sortBy);\n  useEffect(() => {\n    var x, i, j, selElmnt, a, b, c;\n    /* Look for any elements with the class \"custom-select\": */\n\n    x = document.getElementsByClassName(\"custom-select\");\n\n    for (i = 0; i < x.length; i++) {\n      selElmnt = x[i].getElementsByTagName(\"select\")[0];\n      /* For each element, create a new DIV that will act as the selected item: */\n\n      a = document.createElement(\"DIV\");\n      a.setAttribute(\"class\", \"select-selected\");\n      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\n      x[i].appendChild(a);\n      /* For each element, create a new DIV that will contain the option list: */\n\n      b = document.createElement(\"DIV\");\n      b.setAttribute(\"class\", \"select-items select-hide\");\n\n      for (j = 1; j < selElmnt.length; j++) {\n        /* For each option in the original select element,\r\n        create a new DIV that will act as an option item: */\n        c = document.createElement(\"DIV\");\n        c.innerHTML = selElmnt.options[j].innerHTML;\n        c.addEventListener(\"click\", function (e) {\n          /* When an item is clicked, update the original select box,\r\n          and the selected item: */\n          filterDepartment(e.target.innerHTML);\n          var y, i, k, s, h;\n          s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\n          h = this.parentNode.previousSibling;\n\n          for (i = 0; i < s.length; i++) {\n            if (s.options[i].innerHTML === this.innerHTML) {\n              s.selectedIndex = i;\n              h.innerHTML = this.innerHTML;\n              y = this.parentNode.getElementsByClassName(\"same-as-selected\");\n\n              for (k = 0; k < y.length; k++) {\n                y[k].removeAttribute(\"class\");\n              }\n\n              this.setAttribute(\"class\", \"same-as-selected\");\n              break;\n            }\n          }\n\n          h.click();\n        });\n        b.appendChild(c);\n      }\n\n      x[i].appendChild(b);\n      a.addEventListener(\"click\", function (e) {\n        /* When the select box is clicked, close any other select boxes,\r\n        and open/close the current select box: */\n        e.stopPropagation();\n        closeAllSelect(this);\n        this.nextSibling.classList.toggle(\"select-hide\");\n        this.classList.toggle(\"select-arrow-active\");\n      });\n    }\n\n    function closeAllSelect(elmnt) {\n      /* A function that will close all select boxes in the document,\r\n      except the current select box: */\n      var x,\n          y,\n          i,\n          arrNo = [];\n      x = document.getElementsByClassName(\"select-items\");\n      y = document.getElementsByClassName(\"select-selected\");\n\n      for (i = 0; i < y.length; i++) {\n        if (elmnt === y[i]) {\n          arrNo.push(i);\n        } else {\n          y[i].classList.remove(\"select-arrow-active\");\n        }\n      }\n\n      for (i = 0; i < x.length; i++) {\n        if (arrNo.indexOf(i)) {\n          x[i].classList.add(\"select-hide\");\n        }\n      }\n    }\n    /* If the user clicks anywhere outside the select box,\r\n    then close all select boxes: */\n\n\n    document.addEventListener(\"click\", closeAllSelect);\n  }, []);\n  /*\r\n  sortedMatches = sortedMatches.sort((b, a) =>\r\n      b.updatedAt > a.updatedAt ? -1 : 1\r\n  */\n  //render a list of players\n\n  const renderPlayers = () => {\n    let sortedPlayers = [...playerList];\n    sortedPlayers = sortedPlayers.sort((b, a) => a.username > b.username ? -1 : 1);\n    return sortedPlayers.map(currentPlayer => {\n      return React.createElement(Player, {\n        chosen: () => {\n          handleChosen(currentPlayer);\n        },\n        player: currentPlayer,\n        key: currentPlayer._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    });\n  };\n\n  const handleChosen = player => {\n    let cList = chosenPlayerList;\n    let pList = players;\n    console.log(player);\n\n    if (pList.includes(player)) {\n      if (cList.length <= 3) {\n        let index = pList.indexOf(player);\n\n        if (index !== -1) {\n          pList.splice(index, 1);\n        }\n      } else return;\n\n      cList.push(player);\n    } else {\n      let index = cList.indexOf(player);\n\n      if (index !== -1) {\n        cList.splice(index, 1);\n      }\n\n      pList.push(player);\n    }\n\n    dispatch(handleChosenPlayer(playerList, chosenPlayerList));\n  };\n\n  const shuffleChosen = array => {\n    let i = array.length,\n        temp,\n        rand;\n\n    while (0 !== i) {\n      rand = Math.floor(Math.random() * i);\n      i -= 1;\n      temp = array[i];\n      array[i] = array[rand];\n      array[rand] = temp;\n    }\n\n    return array;\n  };\n\n  const shuffle = async () => {\n    dispatch(shuffling());\n    let i = 1;\n\n    function loop() {\n      setTimeout(() => {\n        dispatch(setChosenPlayers(shuffleChosen(chosenPlayerList)));\n        i++;\n\n        if (i < 15) {\n          loop();\n        }\n      }, 300);\n    }\n\n    loop();\n    console.log(\"hello\");\n    dispatch(shuffling());\n  }; //Render a list of chosen players\n\n\n  const renderChosenPlayers = () => {\n    return chosenPlayerList.map(currentPlayer => {\n      return React.createElement(Player, {\n        chosen: () => handleChosen(currentPlayer),\n        player: currentPlayer,\n        key: currentPlayer._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    });\n  };\n\n  const renderMatchOptions = () => {\n    return React.createElement(React.Fragment, null, chosenPlayerList.length > 3 && !isLoading ? React.createElement(\"div\", {\n      className: \"c_team-options-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"c_team-options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, !isShuffling && React.createElement(\"button\", {\n      className: \"c_button-team-options\",\n      onClick: shuffle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"SHUFFLE\")), !isLoading ? React.createElement(\"button\", {\n      className: \"c_start-game-button\",\n      onClick: startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"START GAME\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }));\n  };\n\n  const startGame = async () => {\n    let teams = {\n      blue: {\n        players: [],\n        score: 0,\n        adjustment: 0\n      },\n      red: {\n        players: [],\n        score: 0,\n        adjustment: 0\n      }\n    };\n    let matchOver = false;\n\n    if (chosenPlayerList.length === 4) {\n      for (let i = 0; i < 2; i++) {\n        teams.blue.players.push(chosenPlayerList[i]);\n      }\n\n      for (let i = 2; i < 4; i++) {\n        teams.red.players.push(chosenPlayerList[i]);\n      }\n\n      const matchData = {\n        teams,\n        location,\n        matchOver\n      };\n      dispatch(createMatch(matchData));\n\n      if (matches.length > 15) {\n        dispatch(removeMatch(matches[0]._id));\n      }\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"c_select-players-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c_player-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, \"Filter Players\"), React.createElement(\"option\", {\n    value: \"All\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"All\"), departments.map(d => React.createElement(\"option\", {\n    value: d,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, d)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, renderPlayers())), React.createElement(\"div\", {\n    className: \"c_selected-players-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c_team-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c_team-img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: blueShirt,\n    alt: \"red shirt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"c_players-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `c_selected-player ${chosenPlayerList[0] ? \"p_background-white\" : \"\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, chosenPlayerList[0] && React.createElement(Player, {\n    chosen: () => {\n      handleChosen(chosenPlayerList[0]);\n    },\n    player: chosenPlayerList[0],\n    key: chosenPlayerList[0]._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: `c_selected-player ${chosenPlayerList[1] ? \"p_background-white\" : \"\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, chosenPlayerList[1] && React.createElement(Player, {\n    chosen: () => {\n      handleChosen(chosenPlayerList[1]);\n    },\n    player: chosenPlayerList[1],\n    key: chosenPlayerList[1]._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"c_breakline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"c_team-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"c_team-img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: redShirt,\n    alt: \"red shirt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"c_players-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `c_selected-player ${chosenPlayerList[2] ? \"p_background-white\" : \"\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, chosenPlayerList[2] && React.createElement(Player, {\n    chosen: () => {\n      handleChosen(chosenPlayerList[2]);\n    },\n    player: chosenPlayerList[2],\n    key: chosenPlayerList[2]._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: `c_selected-player ${chosenPlayerList[3] ? \"p_background-white\" : \"\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, chosenPlayerList[3] && React.createElement(Player, {\n    chosen: () => {\n      handleChosen(chosenPlayerList[3]);\n    },\n    player: chosenPlayerList[3],\n    key: chosenPlayerList[3]._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }))))), renderMatchOptions());\n};\n\nexport default SelectPlayers;","map":{"version":3,"sources":["R:/React/foos-test/foos-master/src/components/selectPlayers/SelectPlayers.js"],"names":["React","useEffect","Player","handleChosenPlayer","setChosenPlayers","shuffling","sortPlayersBy","useSelector","useDispatch","createMatch","removeMatch","redShirt","blueShirt","startSound","SelectPlayers","props","dispatch","location","matches","state","matchReducer","isLoading","playerReducer","players","chosenPlayerList","chosenPlayers","isShuffling","sortBy","departments","playerList","filterDepartment","dep","startRoundMusic","Audio","filter","player","department","x","i","j","selElmnt","a","b","c","document","getElementsByClassName","length","getElementsByTagName","createElement","setAttribute","innerHTML","options","selectedIndex","appendChild","addEventListener","e","target","y","k","s","h","parentNode","previousSibling","removeAttribute","click","stopPropagation","closeAllSelect","nextSibling","classList","toggle","elmnt","arrNo","push","remove","indexOf","add","renderPlayers","sortedPlayers","sort","username","map","currentPlayer","handleChosen","_id","cList","pList","console","log","includes","index","splice","shuffleChosen","array","temp","rand","Math","floor","random","shuffle","loop","setTimeout","renderChosenPlayers","renderMatchOptions","startGame","teams","blue","score","adjustment","red","matchOver","matchData","d"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,SAHF,EAIEC,aAJF,QAKO,mCALP;AAMA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kCAAzC;AACA,OAAOC,QAAP,MAAqB,wCAArB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACA,MAAIC,OAAO,GAAGH,KAAK,CAACG,OAApB;;AAH6B,qBAKXX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,YAAhB,CALA;AAAA,MAKxBC,SALwB,gBAKxBA,SALwB;;AAAA,sBAazBd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACG,aAAhB,CAbc;AAAA,MAQ3BC,OAR2B,iBAQ3BA,OAR2B;AAAA,MASZC,gBATY,iBAS3BC,aAT2B;AAAA,MAU3BC,WAV2B,iBAU3BA,WAV2B;AAAA,MAW3BC,MAX2B,iBAW3BA,MAX2B;AAAA,MAY3BC,WAZ2B,iBAY3BA,WAZ2B;;AAe7B,MAAIC,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAjB;;AAEA,QAAMO,gBAAgB,GAAGC,GAAG,IAAI;AAC9Bf,IAAAA,QAAQ,CAACV,aAAa,CAACyB,GAAD,CAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,IAAIC,KAAJ,CAAUpB,UAAV,CAAxB;AAEAc,EAAAA,MAAM,KAAK,KAAX,GACKE,UAAU,GAAGA,UADlB,GAEKA,UAAU,GAAGA,UAAU,CAACK,MAAX,CAAkBC,MAAM,IAAIA,MAAM,CAACC,UAAP,KAAsBT,MAAlD,CAFlB;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,QAAb,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B;AACA;;AACAN,IAAAA,CAAC,GAAGO,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,CAAJ;;AACA,SAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,CAAC,CAACS,MAAlB,EAA0BR,CAAC,EAA3B,EAA+B;AAC7BE,MAAAA,QAAQ,GAAGH,CAAC,CAACC,CAAD,CAAD,CAAKS,oBAAL,CAA0B,QAA1B,EAAoC,CAApC,CAAX;AACA;;AACAN,MAAAA,CAAC,GAAGG,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAJ;AACAP,MAAAA,CAAC,CAACQ,YAAF,CAAe,OAAf,EAAwB,iBAAxB;AACAR,MAAAA,CAAC,CAACS,SAAF,GAAcV,QAAQ,CAACW,OAAT,CAAiBX,QAAQ,CAACY,aAA1B,EAAyCF,SAAvD;AACAb,MAAAA,CAAC,CAACC,CAAD,CAAD,CAAKe,WAAL,CAAiBZ,CAAjB;AACA;;AACAC,MAAAA,CAAC,GAAGE,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAJ;AACAN,MAAAA,CAAC,CAACO,YAAF,CAAe,OAAf,EAAwB,0BAAxB;;AACA,WAAKV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,QAAQ,CAACM,MAAzB,EAAiCP,CAAC,EAAlC,EAAsC;AACpC;;AAEAI,QAAAA,CAAC,GAAGC,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAJ;AACAL,QAAAA,CAAC,CAACO,SAAF,GAAcV,QAAQ,CAACW,OAAT,CAAiBZ,CAAjB,EAAoBW,SAAlC;AACAP,QAAAA,CAAC,CAACW,gBAAF,CAAmB,OAAnB,EAA4B,UAAUC,CAAV,EAAa;AACvC;;AAEAzB,UAAAA,gBAAgB,CAACyB,CAAC,CAACC,MAAF,CAASN,SAAV,CAAhB;AAEA,cAAIO,CAAJ,EAAOnB,CAAP,EAAUoB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB;AACAD,UAAAA,CAAC,GAAG,KAAKE,UAAL,CAAgBA,UAAhB,CAA2Bd,oBAA3B,CAAgD,QAAhD,EAA0D,CAA1D,CAAJ;AACAa,UAAAA,CAAC,GAAG,KAAKC,UAAL,CAAgBC,eAApB;;AACA,eAAKxB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqB,CAAC,CAACb,MAAlB,EAA0BR,CAAC,EAA3B,EAA+B;AAC7B,gBAAIqB,CAAC,CAACR,OAAF,CAAUb,CAAV,EAAaY,SAAb,KAA2B,KAAKA,SAApC,EAA+C;AAC7CS,cAAAA,CAAC,CAACP,aAAF,GAAkBd,CAAlB;AACAsB,cAAAA,CAAC,CAACV,SAAF,GAAc,KAAKA,SAAnB;AACAO,cAAAA,CAAC,GAAG,KAAKI,UAAL,CAAgBhB,sBAAhB,CAAuC,kBAAvC,CAAJ;;AACA,mBAAKa,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,CAAC,CAACX,MAAlB,EAA0BY,CAAC,EAA3B,EAA+B;AAC7BD,gBAAAA,CAAC,CAACC,CAAD,CAAD,CAAKK,eAAL,CAAqB,OAArB;AACD;;AACD,mBAAKd,YAAL,CAAkB,OAAlB,EAA2B,kBAA3B;AACA;AACD;AACF;;AACDW,UAAAA,CAAC,CAACI,KAAF;AACD,SArBD;AAsBAtB,QAAAA,CAAC,CAACW,WAAF,CAAcV,CAAd;AACD;;AACDN,MAAAA,CAAC,CAACC,CAAD,CAAD,CAAKe,WAAL,CAAiBX,CAAjB;AACAD,MAAAA,CAAC,CAACa,gBAAF,CAAmB,OAAnB,EAA4B,UAAUC,CAAV,EAAa;AACvC;;AAEAA,QAAAA,CAAC,CAACU,eAAF;AACAC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACA,aAAKC,WAAL,CAAiBC,SAAjB,CAA2BC,MAA3B,CAAkC,aAAlC;AACA,aAAKD,SAAL,CAAeC,MAAf,CAAsB,qBAAtB;AACD,OAPD;AAQD;;AAED,aAASH,cAAT,CAAwBI,KAAxB,EAA+B;AAC7B;;AAEA,UAAIjC,CAAJ;AAAA,UACEoB,CADF;AAAA,UAEEnB,CAFF;AAAA,UAGEiC,KAAK,GAAG,EAHV;AAIAlC,MAAAA,CAAC,GAAGO,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAJ;AACAY,MAAAA,CAAC,GAAGb,QAAQ,CAACC,sBAAT,CAAgC,iBAAhC,CAAJ;;AACA,WAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmB,CAAC,CAACX,MAAlB,EAA0BR,CAAC,EAA3B,EAA+B;AAC7B,YAAIgC,KAAK,KAAKb,CAAC,CAACnB,CAAD,CAAf,EAAoB;AAClBiC,UAAAA,KAAK,CAACC,IAAN,CAAWlC,CAAX;AACD,SAFD,MAEO;AACLmB,UAAAA,CAAC,CAACnB,CAAD,CAAD,CAAK8B,SAAL,CAAeK,MAAf,CAAsB,qBAAtB;AACD;AACF;;AACD,WAAKnC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,CAAC,CAACS,MAAlB,EAA0BR,CAAC,EAA3B,EAA+B;AAC7B,YAAIiC,KAAK,CAACG,OAAN,CAAcpC,CAAd,CAAJ,EAAsB;AACpBD,UAAAA,CAAC,CAACC,CAAD,CAAD,CAAK8B,SAAL,CAAeO,GAAf,CAAmB,aAAnB;AACD;AACF;AACF;AAED;;;;AAEA/B,IAAAA,QAAQ,CAACU,gBAAT,CAA0B,OAA1B,EAAmCY,cAAnC;AACD,GAhFQ,EAgFN,EAhFM,CAAT;AAiFA;;;;AAKA;;AACA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAIC,aAAa,GAAG,CAAC,GAAGhD,UAAJ,CAApB;AACAgD,IAAAA,aAAa,GAAGA,aAAa,CAACC,IAAd,CAAmB,CAACpC,CAAD,EAAID,CAAJ,KACjCA,CAAC,CAACsC,QAAF,GAAarC,CAAC,CAACqC,QAAf,GAA0B,CAAC,CAA3B,GAA+B,CADjB,CAAhB;AAIA,WAAOF,aAAa,CAACG,GAAd,CAAkBC,aAAa,IAAI;AACxC,aACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAE,MAAM;AACZC,UAAAA,YAAY,CAACD,aAAD,CAAZ;AACD,SAHH;AAIE,QAAA,MAAM,EAAEA,aAJV;AAKE,QAAA,GAAG,EAAEA,aAAa,CAACE,GALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVM,CAAP;AAWD,GAjBD;;AAmBA,QAAMD,YAAY,GAAG/C,MAAM,IAAI;AAC7B,QAAIiD,KAAK,GAAG5D,gBAAZ;AACA,QAAI6D,KAAK,GAAG9D,OAAZ;AAEA+D,IAAAA,OAAO,CAACC,GAAR,CAAYpD,MAAZ;;AAEA,QAAIkD,KAAK,CAACG,QAAN,CAAerD,MAAf,CAAJ,EAA4B;AAC1B,UAAIiD,KAAK,CAACtC,MAAN,IAAgB,CAApB,EAAuB;AACrB,YAAI2C,KAAK,GAAGJ,KAAK,CAACX,OAAN,CAAcvC,MAAd,CAAZ;;AACA,YAAIsD,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBJ,UAAAA,KAAK,CAACK,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACD;AACF,OALD,MAKO;;AAEPL,MAAAA,KAAK,CAACZ,IAAN,CAAWrC,MAAX;AACD,KATD,MASO;AACL,UAAIsD,KAAK,GAAGL,KAAK,CAACV,OAAN,CAAcvC,MAAd,CAAZ;;AACA,UAAIsD,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBL,QAAAA,KAAK,CAACM,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACD;;AAEDJ,MAAAA,KAAK,CAACb,IAAN,CAAWrC,MAAX;AACD;;AAEDnB,IAAAA,QAAQ,CAACb,kBAAkB,CAAC0B,UAAD,EAAaL,gBAAb,CAAnB,CAAR;AACD,GAzBD;;AA2BA,QAAMmE,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAItD,CAAC,GAAGsD,KAAK,CAAC9C,MAAd;AAAA,QACE+C,IADF;AAAA,QAEEC,IAFF;;AAIA,WAAO,MAAMxD,CAAb,EAAgB;AACdwD,MAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB3D,CAA3B,CAAP;AACAA,MAAAA,CAAC,IAAI,CAAL;AAEAuD,MAAAA,IAAI,GAAGD,KAAK,CAACtD,CAAD,CAAZ;AACAsD,MAAAA,KAAK,CAACtD,CAAD,CAAL,GAAWsD,KAAK,CAACE,IAAD,CAAhB;AACAF,MAAAA,KAAK,CAACE,IAAD,CAAL,GAAcD,IAAd;AACD;;AAED,WAAOD,KAAP;AACD,GAfD;;AAiBA,QAAMM,OAAO,GAAG,YAAY;AAC1BlF,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AAEA,QAAIiC,CAAC,GAAG,CAAR;;AAEA,aAAS6D,IAAT,GAAgB;AACdC,MAAAA,UAAU,CAAC,MAAM;AACfpF,QAAAA,QAAQ,CAACZ,gBAAgB,CAACuF,aAAa,CAACnE,gBAAD,CAAd,CAAjB,CAAR;AACAc,QAAAA,CAAC;;AACD,YAAIA,CAAC,GAAG,EAAR,EAAY;AACV6D,UAAAA,IAAI;AACL;AACF,OANS,EAMP,GANO,CAAV;AAOD;;AAEDA,IAAAA,IAAI;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAvE,IAAAA,QAAQ,CAACX,SAAS,EAAV,CAAR;AACD,GAlBD,CAnL6B,CAuM7B;;;AACA,QAAMgG,mBAAmB,GAAG,MAAM;AAChC,WAAO7E,gBAAgB,CAACwD,GAAjB,CAAqBC,aAAa,IAAI;AAC3C,aACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAE,MAAMC,YAAY,CAACD,aAAD,CAD5B;AAEE,QAAA,MAAM,EAAEA,aAFV;AAGE,QAAA,GAAG,EAAEA,aAAa,CAACE,GAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,CAAP;AASD,GAVD;;AAYA,QAAMmB,kBAAkB,GAAG,MAAM;AAC/B,WACE,0CACI9E,gBAAgB,CAACsB,MAAjB,GAA0B,CAA3B,IAAiC,CAACzB,SAAlC,GACC;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACK,WAAD,IACC;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAA0C,MAAA,OAAO,EAAEwE,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADF,EAQI,CAAC7E,SAAD,GAAc;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAEkF,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAd,GAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVf,CADD,GAgBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBN,CADF;AAsBD,GAvBD;;AAyBA,QAAMA,SAAS,GAAG,YAAY;AAC5B,QAAIC,KAAK,GAAG;AACVC,MAAAA,IAAI,EAAE;AAAElF,QAAAA,OAAO,EAAE,EAAX;AAAemF,QAAAA,KAAK,EAAE,CAAtB;AAAyBC,QAAAA,UAAU,EAAE;AAArC,OADI;AAEVC,MAAAA,GAAG,EAAE;AAAErF,QAAAA,OAAO,EAAE,EAAX;AAAemF,QAAAA,KAAK,EAAE,CAAtB;AAAyBC,QAAAA,UAAU,EAAE;AAArC;AAFK,KAAZ;AAIA,QAAIE,SAAS,GAAG,KAAhB;;AAEA,QAAIrF,gBAAgB,CAACsB,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BkE,QAAAA,KAAK,CAACC,IAAN,CAAWlF,OAAX,CAAmBiD,IAAnB,CAAwBhD,gBAAgB,CAACc,CAAD,CAAxC;AACD;;AAED,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BkE,QAAAA,KAAK,CAACI,GAAN,CAAUrF,OAAV,CAAkBiD,IAAlB,CAAuBhD,gBAAgB,CAACc,CAAD,CAAvC;AACD;;AAED,YAAMwE,SAAS,GAAG;AAChBN,QAAAA,KADgB;AAEhBvF,QAAAA,QAFgB;AAGhB4F,QAAAA;AAHgB,OAAlB;AAMA7F,MAAAA,QAAQ,CAACP,WAAW,CAACqG,SAAD,CAAZ,CAAR;;AACA,UAAI5F,OAAO,CAAC4B,MAAR,GAAiB,EAArB,EAAyB;AACvB9B,QAAAA,QAAQ,CAACN,WAAW,CAACQ,OAAO,CAAC,CAAD,CAAP,CAAWiE,GAAZ,CAAZ,CAAR;AACD;AAGF;AACF,GA7BD;;AA+BA,SACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGGvD,WAAW,CAACoD,GAAZ,CAAgB+B,CAAC,IAChB;AAAQ,IAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,CAAnB,CADD,CAHH,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMnC,aAAa,EAAnB,CAVF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEhE,SAAV;AAAqB,IAAA,GAAG,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,qBACVY,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,oBAAtB,GAA6C,EAC5C,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,gBAAgB,CAAC,CAAD,CAAhB,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,MAAM;AACZ0D,MAAAA,YAAY,CAAC1D,gBAAgB,CAAC,CAAD,CAAjB,CAAZ;AACD,KAHH;AAIE,IAAA,MAAM,EAAEA,gBAAgB,CAAC,CAAD,CAJ1B;AAKE,IAAA,GAAG,EAAEA,gBAAgB,CAAC,CAAD,CAAhB,CAAoB2D,GAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,EAiBE;AACE,IAAA,SAAS,EAAG,qBACV3D,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,oBAAtB,GAA6C,EAC5C,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,gBAAgB,CAAC,CAAD,CAAhB,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,MAAM;AACZ0D,MAAAA,YAAY,CAAC1D,gBAAgB,CAAC,CAAD,CAAjB,CAAZ;AACD,KAHH;AAIE,IAAA,MAAM,EAAEA,gBAAgB,CAAC,CAAD,CAJ1B;AAKE,IAAA,GAAG,EAAEA,gBAAgB,CAAC,CAAD,CAAhB,CAAoB2D,GAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAjBF,CALF,CADF,EAyCE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCF,EA2CE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAExE,QAAV;AAAoB,IAAA,GAAG,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAG,qBACVa,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,oBAAtB,GAA6C,EAC5C,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,gBAAgB,CAAC,CAAD,CAAhB,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,MAAM;AACZ0D,MAAAA,YAAY,CAAC1D,gBAAgB,CAAC,CAAD,CAAjB,CAAZ;AACD,KAHH;AAIE,IAAA,MAAM,EAAEA,gBAAgB,CAAC,CAAD,CAJ1B;AAKE,IAAA,GAAG,EAAEA,gBAAgB,CAAC,CAAD,CAAhB,CAAoB2D,GAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,EAiBE;AACE,IAAA,SAAS,EAAG,qBACV3D,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,oBAAtB,GAA6C,EAC5C,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,gBAAgB,CAAC,CAAD,CAAhB,IACC,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE,MAAM;AACZ0D,MAAAA,YAAY,CAAC1D,gBAAgB,CAAC,CAAD,CAAjB,CAAZ;AACD,KAHH;AAIE,IAAA,MAAM,EAAEA,gBAAgB,CAAC,CAAD,CAJ1B;AAKE,IAAA,GAAG,EAAEA,gBAAgB,CAAC,CAAD,CAAhB,CAAoB2D,GAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAjBF,CALF,CA3CF,CAdF,EAkGGmB,kBAAkB,EAlGrB,CADF;AAsGD,CAlXD;;AAoXA,eAAexF,aAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./_selectPlayers.scss\";\r\nimport Player from \"../player/Player\";\r\nimport {\r\n  handleChosenPlayer,\r\n  setChosenPlayers,\r\n  shuffling,\r\n  sortPlayersBy\r\n} from \"../../redux/players/player-action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createMatch, removeMatch } from \"../../redux/matches/match-action\";\r\nimport redShirt from \"../../assets/images/redShirt_large.png\";\r\nimport blueShirt from \"../../assets/images/blueShirt_large.png\";\r\nimport startSound from \"../../assets/sounds/startround_01.mp3\";\r\n\r\nconst SelectPlayers = props => {\r\n  const dispatch = useDispatch();\r\n  const location = props.location;\r\n  let matches = props.matches;\r\n\r\n  let {isLoading} = useSelector(state => state.matchReducer);\r\n\r\n  let {\r\n    players,\r\n    chosenPlayers: chosenPlayerList,\r\n    isShuffling,\r\n    sortBy,\r\n    departments\r\n  } = useSelector(state => state.playerReducer);\r\n\r\n  let playerList = [...players];\r\n\r\n  const filterDepartment = dep => {\r\n    dispatch(sortPlayersBy(dep));\r\n  };\r\n\r\n  const startRoundMusic = new Audio(startSound);\r\n\r\n  sortBy === \"All\"\r\n    ? (playerList = playerList)\r\n    : (playerList = playerList.filter(player => player.department === sortBy));\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    var x, i, j, selElmnt, a, b, c;\r\n    /* Look for any elements with the class \"custom-select\": */\r\n    x = document.getElementsByClassName(\"custom-select\");\r\n    for (i = 0; i < x.length; i++) {\r\n      selElmnt = x[i].getElementsByTagName(\"select\")[0];\r\n      /* For each element, create a new DIV that will act as the selected item: */\r\n      a = document.createElement(\"DIV\");\r\n      a.setAttribute(\"class\", \"select-selected\");\r\n      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;\r\n      x[i].appendChild(a);\r\n      /* For each element, create a new DIV that will contain the option list: */\r\n      b = document.createElement(\"DIV\");\r\n      b.setAttribute(\"class\", \"select-items select-hide\");\r\n      for (j = 1; j < selElmnt.length; j++) {\r\n        /* For each option in the original select element,\r\n    create a new DIV that will act as an option item: */\r\n        c = document.createElement(\"DIV\");\r\n        c.innerHTML = selElmnt.options[j].innerHTML;\r\n        c.addEventListener(\"click\", function (e) {\r\n          /* When an item is clicked, update the original select box,\r\n        and the selected item: */\r\n          filterDepartment(e.target.innerHTML);\r\n\r\n          var y, i, k, s, h;\r\n          s = this.parentNode.parentNode.getElementsByTagName(\"select\")[0];\r\n          h = this.parentNode.previousSibling;\r\n          for (i = 0; i < s.length; i++) {\r\n            if (s.options[i].innerHTML === this.innerHTML) {\r\n              s.selectedIndex = i;\r\n              h.innerHTML = this.innerHTML;\r\n              y = this.parentNode.getElementsByClassName(\"same-as-selected\");\r\n              for (k = 0; k < y.length; k++) {\r\n                y[k].removeAttribute(\"class\");\r\n              }\r\n              this.setAttribute(\"class\", \"same-as-selected\");\r\n              break;\r\n            }\r\n          }\r\n          h.click();\r\n        });\r\n        b.appendChild(c);\r\n      }\r\n      x[i].appendChild(b);\r\n      a.addEventListener(\"click\", function (e) {\r\n        /* When the select box is clicked, close any other select boxes,\r\n    and open/close the current select box: */\r\n        e.stopPropagation();\r\n        closeAllSelect(this);\r\n        this.nextSibling.classList.toggle(\"select-hide\");\r\n        this.classList.toggle(\"select-arrow-active\");\r\n      });\r\n    }\r\n\r\n    function closeAllSelect(elmnt) {\r\n      /* A function that will close all select boxes in the document,\r\n  except the current select box: */\r\n      var x,\r\n        y,\r\n        i,\r\n        arrNo = [];\r\n      x = document.getElementsByClassName(\"select-items\");\r\n      y = document.getElementsByClassName(\"select-selected\");\r\n      for (i = 0; i < y.length; i++) {\r\n        if (elmnt === y[i]) {\r\n          arrNo.push(i);\r\n        } else {\r\n          y[i].classList.remove(\"select-arrow-active\");\r\n        }\r\n      }\r\n      for (i = 0; i < x.length; i++) {\r\n        if (arrNo.indexOf(i)) {\r\n          x[i].classList.add(\"select-hide\");\r\n        }\r\n      }\r\n    }\r\n\r\n    /* If the user clicks anywhere outside the select box,\r\nthen close all select boxes: */\r\n    document.addEventListener(\"click\", closeAllSelect);\r\n  }, []);\r\n  /*\r\nsortedMatches = sortedMatches.sort((b, a) =>\r\n      b.updatedAt > a.updatedAt ? -1 : 1\r\n*/\r\n\r\n  //render a list of players\r\n  const renderPlayers = () => {\r\n    let sortedPlayers = [...playerList];\r\n    sortedPlayers = sortedPlayers.sort((b, a) =>\r\n      a.username > b.username ? -1 : 1\r\n    );\r\n\r\n    return sortedPlayers.map(currentPlayer => {\r\n      return (\r\n        <Player\r\n          chosen={() => {\r\n            handleChosen(currentPlayer);\r\n          }}\r\n          player={currentPlayer}\r\n          key={currentPlayer._id}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleChosen = player => {\r\n    let cList = chosenPlayerList;\r\n    let pList = players;\r\n\r\n    console.log(player);\r\n\r\n    if (pList.includes(player)) {\r\n      if (cList.length <= 3) {\r\n        let index = pList.indexOf(player);\r\n        if (index !== -1) {\r\n          pList.splice(index, 1);\r\n        }\r\n      } else return;\r\n\r\n      cList.push(player);\r\n    } else {\r\n      let index = cList.indexOf(player);\r\n      if (index !== -1) {\r\n        cList.splice(index, 1);\r\n      }\r\n\r\n      pList.push(player);\r\n    }\r\n\r\n    dispatch(handleChosenPlayer(playerList, chosenPlayerList));\r\n  };\r\n\r\n  const shuffleChosen = array => {\r\n    let i = array.length,\r\n      temp,\r\n      rand;\r\n\r\n    while (0 !== i) {\r\n      rand = Math.floor(Math.random() * i);\r\n      i -= 1;\r\n\r\n      temp = array[i];\r\n      array[i] = array[rand];\r\n      array[rand] = temp;\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  const shuffle = async () => {\r\n    dispatch(shuffling());\r\n\r\n    let i = 1;\r\n\r\n    function loop() {\r\n      setTimeout(() => {\r\n        dispatch(setChosenPlayers(shuffleChosen(chosenPlayerList)));\r\n        i++;\r\n        if (i < 15) {\r\n          loop();\r\n        }\r\n      }, 300);\r\n    }\r\n\r\n    loop();\r\n    console.log(\"hello\");\r\n    dispatch(shuffling());\r\n  };\r\n\r\n  //Render a list of chosen players\r\n  const renderChosenPlayers = () => {\r\n    return chosenPlayerList.map(currentPlayer => {\r\n      return (\r\n        <Player\r\n          chosen={() => handleChosen(currentPlayer)}\r\n          player={currentPlayer}\r\n          key={currentPlayer._id}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderMatchOptions = () => {\r\n    return (\r\n      <>\r\n        {(chosenPlayerList.length > 3) && !isLoading ? (\r\n          <div className=\"c_team-options-container\">\r\n            <div className=\"c_team-options\">\r\n              {!isShuffling && (\r\n                <button className=\"c_button-team-options\" onClick={shuffle}>\r\n                  SHUFFLE\r\n                </button>\r\n              )}\r\n            </div>\r\n             {!isLoading ? (<button className=\"c_start-game-button\" onClick={startGame}>\r\n              START GAME\r\n            </button>) : <div></div>\r\n              }\r\n            \r\n          </div>\r\n        ) : (\r\n            <div></div>\r\n          )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const startGame = async () => {\r\n    let teams = {\r\n      blue: { players: [], score: 0, adjustment: 0 },\r\n      red: { players: [], score: 0, adjustment: 0 }\r\n    };\r\n    let matchOver = false;\r\n\r\n    if (chosenPlayerList.length === 4) {\r\n      for (let i = 0; i < 2; i++) {\r\n        teams.blue.players.push(chosenPlayerList[i]);\r\n      }\r\n\r\n      for (let i = 2; i < 4; i++) {\r\n        teams.red.players.push(chosenPlayerList[i]);\r\n      }\r\n\r\n      const matchData = {\r\n        teams,\r\n        location,\r\n        matchOver\r\n      };\r\n\r\n      dispatch(createMatch(matchData));\r\n      if (matches.length > 15) {\r\n        dispatch(removeMatch(matches[0]._id));\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"c_select-players-container\">\r\n      <div className=\"c_player-list-container\">\r\n        <div className=\"custom-select\">\r\n          <select>\r\n            <option value=\"0\">Filter Players</option>\r\n            <option value=\"All\">All</option>\r\n            {departments.map(d => (\r\n              <option value={d}>{d}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>{renderPlayers()}</div>\r\n      </div>\r\n\r\n      <div className=\"c_selected-players-container\">\r\n        <div className=\"c_team-container\">\r\n          <div className=\"c_team-img-container\">\r\n            <img src={blueShirt} alt=\"red shirt\" />\r\n          </div>\r\n\r\n          <div className=\"c_players-container\">\r\n            <div\r\n              className={`c_selected-player ${\r\n                chosenPlayerList[0] ? \"p_background-white\" : \"\"\r\n                }`}\r\n            >\r\n              {chosenPlayerList[0] && (\r\n                <Player\r\n                  chosen={() => {\r\n                    handleChosen(chosenPlayerList[0]);\r\n                  }}\r\n                  player={chosenPlayerList[0]}\r\n                  key={chosenPlayerList[0]._id}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div\r\n              className={`c_selected-player ${\r\n                chosenPlayerList[1] ? \"p_background-white\" : \"\"\r\n                }`}\r\n            >\r\n              {chosenPlayerList[1] && (\r\n                <Player\r\n                  chosen={() => {\r\n                    handleChosen(chosenPlayerList[1]);\r\n                  }}\r\n                  player={chosenPlayerList[1]}\r\n                  key={chosenPlayerList[1]._id}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"c_breakline\"></div>\r\n\r\n        <div className=\"c_team-container\">\r\n          <div className=\"c_team-img-container\">\r\n            <img src={redShirt} alt=\"red shirt\" />\r\n          </div>\r\n\r\n          <div className=\"c_players-container\">\r\n            <div\r\n              className={`c_selected-player ${\r\n                chosenPlayerList[2] ? \"p_background-white\" : \"\"\r\n                }`}\r\n            >\r\n              {chosenPlayerList[2] && (\r\n                <Player\r\n                  chosen={() => {\r\n                    handleChosen(chosenPlayerList[2]);\r\n                  }}\r\n                  player={chosenPlayerList[2]}\r\n                  key={chosenPlayerList[2]._id}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div\r\n              className={`c_selected-player ${\r\n                chosenPlayerList[3] ? \"p_background-white\" : \"\"\r\n                }`}\r\n            >\r\n              {chosenPlayerList[3] && (\r\n                <Player\r\n                  chosen={() => {\r\n                    handleChosen(chosenPlayerList[3]);\r\n                  }}\r\n                  player={chosenPlayerList[3]}\r\n                  key={chosenPlayerList[3]._id}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {renderMatchOptions()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectPlayers;\r\n"]},"metadata":{},"sourceType":"module"}