{"ast":null,"code":"import { getMatches, postMatch, deleteMatch, updMatch } from \"./match-service\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://foos.ddns.net:4001\");\n/* action types */\n\nexport const FETCH_MATCHES_REQUEST = \"FETCH_MATCHES_REQUEST\";\nexport const FETCH_MATCHES_SUCCESS = \"FETCH_MATCHES_SUCCESS\";\nexport const FETCH_MATCHES_FAIL = \"FETCH_MATCHES_FAIL\";\nexport const CREATE_MATCH_REQUEST = \"CREATE_MATCH_REQUEST\";\nexport const CREATE_MATCH_SUCCESS = \"CREATE_MATCH_SUCCESS\";\nexport const CREATE_MATCH_FAIL = \"CREATE_MATCH_FAIL\";\nexport const UPDATE_MATCH_REQUEST = \"UPDATE_MATCH_REQUEST\";\nexport const UPDATE_MATCH_SUCCESS = \"UPDATE_MATCH_SUCCESS\";\nexport const UPDATE_MATCH_FAIL = \"UPDATE_MATCH_FAIL\";\nexport const FETCH_MATCH_BY_LOCATION_REQUEST = \"FETCH_MATCH_BY_LOCATION_REQUEST\";\nexport const FETCH_MATCH_BY_LOCATION_SUCCESS = \"FETCH_MATCH_BY_LOCATION_SUCCESS\";\nexport const FETCH_MATCH_BY_LOCATION_FAIL = \"FETCH_MATCH_BY_LOCATION_FAIL\";\nexport const REMOVE_MATCH_REQUEST = \"REMOVE_MATCH_REQUEST\";\nexport const REMOVE_MATCH_SUCCESS = \"REMOVE_MATCH_SUCCESS\";\nexport const REMOVE_MATCH_FAIL = \"REMOVE_MATCH_FAIL\";\nexport const SET_MATCH_TO_FALSE_REQUEST = \"SET_MATCH_TO_FALSE_REQUEST\";\nexport const SET_MATCH_TO_FALSE_SUCCESS = \"SET_MATCH_TO_FALSE_SUCCESS\";\nexport const SET_MATCH_TO_FALSE_FAIL = \"SET_MATCH_TO_FALSE_FAIL\";\nexport const GAME_OVER_REQUEST = \"GAME_OVER_REQUEST\";\nexport const GAME_OVER_SUCCESS = \"GAME_OVER_SUCCESS\";\nexport const GAME_OVER_FAIL = \"GAME_OVER_FAIL\";\nexport const REMOVE_ACTIVE_MATCH = \"REMOVE_ACTIVE_MATCH\";\n/* action creators: thunk version */\n\nexport const fetchMatches = () => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_MATCHES_REQUEST\n    });\n\n    try {\n      const _ref = await getMatches(),\n            data = _ref.data;\n\n      dispatch({\n        type: FETCH_MATCHES_SUCCESS,\n        payload: data\n      });\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: FETCH_MATCHES_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const createMatch = matchData => {\n  return async dispatch => {\n    dispatch({\n      type: CREATE_MATCH_REQUEST\n    });\n\n    try {\n      const _ref2 = await postMatch(matchData),\n            data = _ref2.data;\n\n      dispatch({\n        type: CREATE_MATCH_SUCCESS,\n        payload: data\n      });\n      socket.emit(\"refreshMatches\");\n      socket.emit(\"refreshPlayers\");\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: CREATE_MATCH_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const updateMatch = matchData => {\n  return async dispatch => {\n    dispatch({\n      type: UPDATE_MATCH_REQUEST\n    });\n\n    try {\n      const _ref3 = await updMatch(matchData),\n            data = _ref3.data;\n\n      dispatch({\n        type: UPDATE_MATCH_SUCCESS,\n        payload: data\n      });\n      socket.emit(\"refreshMatches\");\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: UPDATE_MATCH_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const fetchMatchByLocation = location => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_MATCH_BY_LOCATION_REQUEST\n    });\n\n    try {\n      const _ref4 = await getMatches(),\n            data = _ref4.data;\n\n      const matchList = data.filter(match => {\n        return match.location === location && match.matchOver === false;\n      });\n      const activeMatch = matchList.length > 0 ? matchList[0] : false;\n      dispatch({\n        type: FETCH_MATCH_BY_LOCATION_SUCCESS,\n        payload: activeMatch\n      });\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: FETCH_MATCH_BY_LOCATION_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const removeMatch = id => {\n  return async dispatch => {\n    dispatch({\n      type: REMOVE_MATCH_REQUEST\n    });\n\n    try {\n      await deleteMatch(id);\n      dispatch({\n        type: REMOVE_MATCH_SUCCESS,\n        payload: id\n      });\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: REMOVE_MATCH_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const setMatchToFalse = () => {\n  return dispatch => {\n    dispatch({\n      type: SET_MATCH_TO_FALSE_REQUEST\n    });\n\n    try {\n      dispatch({\n        type: SET_MATCH_TO_FALSE_SUCCESS\n      });\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: SET_MATCH_TO_FALSE_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const gameOver = () => {\n  return dispatch => {\n    dispatch({\n      type: GAME_OVER_REQUEST\n    });\n\n    try {\n      dispatch({\n        type: GAME_OVER_SUCCESS\n      });\n    } catch (e) {\n      console.log(e.message);\n      alert(e.message);\n      dispatch({\n        type: GAME_OVER_FAIL,\n        payload: e.message\n      });\n    }\n  };\n};\nexport const removeActiveMatch = () => ({\n  type: REMOVE_ACTIVE_MATCH\n});","map":{"version":3,"sources":["/home/pi/foos/src/redux/matches/match-action.js"],"names":["getMatches","postMatch","deleteMatch","updMatch","openSocket","socket","FETCH_MATCHES_REQUEST","FETCH_MATCHES_SUCCESS","FETCH_MATCHES_FAIL","CREATE_MATCH_REQUEST","CREATE_MATCH_SUCCESS","CREATE_MATCH_FAIL","UPDATE_MATCH_REQUEST","UPDATE_MATCH_SUCCESS","UPDATE_MATCH_FAIL","FETCH_MATCH_BY_LOCATION_REQUEST","FETCH_MATCH_BY_LOCATION_SUCCESS","FETCH_MATCH_BY_LOCATION_FAIL","REMOVE_MATCH_REQUEST","REMOVE_MATCH_SUCCESS","REMOVE_MATCH_FAIL","SET_MATCH_TO_FALSE_REQUEST","SET_MATCH_TO_FALSE_SUCCESS","SET_MATCH_TO_FALSE_FAIL","GAME_OVER_REQUEST","GAME_OVER_SUCCESS","GAME_OVER_FAIL","REMOVE_ACTIVE_MATCH","fetchMatches","dispatch","type","data","payload","e","console","log","message","alert","createMatch","matchData","emit","updateMatch","fetchMatchByLocation","location","matchList","filter","match","matchOver","activeMatch","length","removeMatch","id","setMatchToFalse","gameOver","removeActiveMatch"],"mappings":"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","sourcesContent":["import { getMatches, postMatch, deleteMatch, updMatch } from \"./match-service\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nconst socket = openSocket(\"http://foos.ddns.net:4001\");\r\n\r\n/* action types */\r\nexport const FETCH_MATCHES_REQUEST = \"FETCH_MATCHES_REQUEST\";\r\nexport const FETCH_MATCHES_SUCCESS = \"FETCH_MATCHES_SUCCESS\";\r\nexport const FETCH_MATCHES_FAIL = \"FETCH_MATCHES_FAIL\";\r\n\r\nexport const CREATE_MATCH_REQUEST = \"CREATE_MATCH_REQUEST\";\r\nexport const CREATE_MATCH_SUCCESS = \"CREATE_MATCH_SUCCESS\";\r\nexport const CREATE_MATCH_FAIL = \"CREATE_MATCH_FAIL\";\r\n\r\nexport const UPDATE_MATCH_REQUEST = \"UPDATE_MATCH_REQUEST\";\r\nexport const UPDATE_MATCH_SUCCESS = \"UPDATE_MATCH_SUCCESS\";\r\nexport const UPDATE_MATCH_FAIL = \"UPDATE_MATCH_FAIL\";\r\n\r\nexport const FETCH_MATCH_BY_LOCATION_REQUEST =\r\n  \"FETCH_MATCH_BY_LOCATION_REQUEST\";\r\nexport const FETCH_MATCH_BY_LOCATION_SUCCESS =\r\n  \"FETCH_MATCH_BY_LOCATION_SUCCESS\";\r\nexport const FETCH_MATCH_BY_LOCATION_FAIL = \"FETCH_MATCH_BY_LOCATION_FAIL\";\r\n\r\nexport const REMOVE_MATCH_REQUEST = \"REMOVE_MATCH_REQUEST\";\r\nexport const REMOVE_MATCH_SUCCESS = \"REMOVE_MATCH_SUCCESS\";\r\nexport const REMOVE_MATCH_FAIL = \"REMOVE_MATCH_FAIL\";\r\n\r\nexport const SET_MATCH_TO_FALSE_REQUEST = \"SET_MATCH_TO_FALSE_REQUEST\";\r\nexport const SET_MATCH_TO_FALSE_SUCCESS = \"SET_MATCH_TO_FALSE_SUCCESS\";\r\nexport const SET_MATCH_TO_FALSE_FAIL = \"SET_MATCH_TO_FALSE_FAIL\";\r\n\r\nexport const GAME_OVER_REQUEST = \"GAME_OVER_REQUEST\";\r\nexport const GAME_OVER_SUCCESS = \"GAME_OVER_SUCCESS\";\r\nexport const GAME_OVER_FAIL = \"GAME_OVER_FAIL\";\r\n\r\nexport const REMOVE_ACTIVE_MATCH = \"REMOVE_ACTIVE_MATCH\";\r\n\r\n/* action creators: thunk version */\r\nexport const fetchMatches = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: FETCH_MATCHES_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await getMatches();\r\n      dispatch({ type: FETCH_MATCHES_SUCCESS, payload: data });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: FETCH_MATCHES_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createMatch = matchData => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: CREATE_MATCH_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await postMatch(matchData);\r\n\r\n      dispatch({ type: CREATE_MATCH_SUCCESS, payload: data });\r\n      socket.emit(\"refreshMatches\");\r\n      socket.emit(\"refreshPlayers\");\r\n      \r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: CREATE_MATCH_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateMatch = matchData => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: UPDATE_MATCH_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await updMatch(matchData);\r\n\r\n      dispatch({ type: UPDATE_MATCH_SUCCESS, payload: data });\r\n      socket.emit(\"refreshMatches\");\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: UPDATE_MATCH_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchMatchByLocation = location => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: FETCH_MATCH_BY_LOCATION_REQUEST\r\n    });\r\n    try {\r\n      const { data } = await getMatches();\r\n\r\n      const matchList = data.filter(match => {\r\n        return match.location === location && match.matchOver === false;\r\n      });\r\n\r\n      const activeMatch = matchList.length > 0 ? matchList[0] : false;\r\n      dispatch({ type: FETCH_MATCH_BY_LOCATION_SUCCESS, payload: activeMatch });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: FETCH_MATCH_BY_LOCATION_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeMatch = id => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: REMOVE_MATCH_REQUEST\r\n    });\r\n    try {\r\n      await deleteMatch(id);\r\n      dispatch({ type: REMOVE_MATCH_SUCCESS, payload: id });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: REMOVE_MATCH_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setMatchToFalse = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_MATCH_TO_FALSE_REQUEST\r\n    });\r\n    try {\r\n      dispatch({ type: SET_MATCH_TO_FALSE_SUCCESS });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: SET_MATCH_TO_FALSE_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GAME_OVER_REQUEST\r\n    });\r\n    try {\r\n      dispatch({ type: GAME_OVER_SUCCESS });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      alert(e.message);\r\n      dispatch({\r\n        type: GAME_OVER_FAIL,\r\n        payload: e.message\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeActiveMatch = () => ({\r\n  type: REMOVE_ACTIVE_MATCH\r\n});\r\n"]},"metadata":{},"sourceType":"module"}