{"ast":null,"code":"import _objectSpread from \"R:\\\\React\\\\foos-test\\\\foos-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"./match-action\";\nconst initialState = {\n  matches: [],\n  match: false,\n  matchOver: false,\n  isLoading: false,\n  dataLoaded: false,\n  matchReady: false,\n  error: \"\"\n};\nexport const matchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FETCH_MATCHES_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        dataLoaded: false\n      });\n\n    case types.FETCH_MATCHES_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        matches: action.payload,\n        dataLoaded: true\n      });\n\n    case types.FETCH_MATCHES_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload,\n        dataLoaded: false\n      });\n\n    case types.FETCH_MATCH_BY_LOCATION_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        dataLoaded: false\n      });\n\n    case types.FETCH_MATCH_BY_LOCATION_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        dataLoaded: true,\n        match: action.payload\n      });\n\n    case types.FETCH_MATCH_BY_LOCATION_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        dataLoaded: false,\n        error: action.payload\n      });\n\n    case types.CREATE_MATCH_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case types.CREATE_MATCH_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        matchOver: false,\n        match: action.payload\n      });\n\n    case types.CREATE_MATCH_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false\n      });\n\n    case types.UPDATE_MATCH_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case types.UPDATE_MATCH_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        match: action.payload\n      });\n\n    case types.UPDATE_MATCH_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false\n      });\n\n    case types.REMOVE_MATCH_REQUEST:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case types.REMOVE_MATCH_SUCCESS:\n      return _objectSpread({}, state, {\n        matches: state.matches.filter(m => m._id !== action.payload),\n        matchOver: true,\n        match: false,\n        isLoading: false\n      });\n\n    case types.REMOVE_MATCH_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: action.payload\n      });\n\n    case types.SET_MATCH_TO_FALSE_REQUEST:\n      return _objectSpread({}, state);\n\n    case types.SET_MATCH_TO_FALSE_SUCCESS:\n      return _objectSpread({}, state, {\n        match: false\n      });\n\n    case types.SET_MATCH_TO_FALSE_FAIL:\n      return _objectSpread({}, state);\n\n    case types.GAME_OVER_REQUEST:\n      return _objectSpread({}, state);\n\n    case types.GAME_OVER_SUCCESS:\n      return _objectSpread({}, state, {\n        matchOver: true\n      });\n\n    case types.GAME_OVER_FAIL:\n      return _objectSpread({}, state);\n\n    case types.REMOVE_ACTIVE_MATCH:\n      return _objectSpread({}, state, {\n        match: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["R:/React/foos-test/foos-master/src/redux/matches/match-reducer.js"],"names":["types","initialState","matches","match","matchOver","isLoading","dataLoaded","matchReady","error","matchReducer","state","action","type","FETCH_MATCHES_REQUEST","FETCH_MATCHES_SUCCESS","payload","FETCH_MATCHES_FAIL","FETCH_MATCH_BY_LOCATION_REQUEST","FETCH_MATCH_BY_LOCATION_SUCCESS","FETCH_MATCH_BY_LOCATION_FAIL","CREATE_MATCH_REQUEST","CREATE_MATCH_SUCCESS","CREATE_MATCH_FAIL","UPDATE_MATCH_REQUEST","UPDATE_MATCH_SUCCESS","UPDATE_MATCH_FAIL","REMOVE_MATCH_REQUEST","REMOVE_MATCH_SUCCESS","filter","m","_id","REMOVE_MATCH_FAIL","SET_MATCH_TO_FALSE_REQUEST","SET_MATCH_TO_FALSE_SUCCESS","SET_MATCH_TO_FALSE_FAIL","GAME_OVER_REQUEST","GAME_OVER_SUCCESS","GAME_OVER_FAIL","REMOVE_ACTIVE_MATCH"],"mappings":"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","sourcesContent":["import * as types from \"./match-action\";\r\n\r\nconst initialState = {\r\n  matches: [],\r\n  match: false,\r\n  matchOver: false,\r\n  isLoading: false,\r\n  dataLoaded: false,\r\n  matchReady: false,\r\n  error: \"\"\r\n};\r\n\r\nexport const matchReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_MATCHES_REQUEST:\r\n      return { ...state, isLoading: true, dataLoaded: false };\r\n    case types.FETCH_MATCHES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        matches: action.payload,\r\n        dataLoaded: true\r\n      };\r\n    case types.FETCH_MATCHES_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload,\r\n        dataLoaded: false\r\n      };\r\n    case types.FETCH_MATCH_BY_LOCATION_REQUEST:\r\n      return { ...state, isLoading: true, dataLoaded: false };\r\n    case types.FETCH_MATCH_BY_LOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        dataLoaded: true,\r\n        match: action.payload\r\n      };\r\n    case types.FETCH_MATCH_BY_LOCATION_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        dataLoaded: false,\r\n        error: action.payload\r\n      };\r\n    case types.CREATE_MATCH_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case types.CREATE_MATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        matchOver: false,\r\n        match: action.payload\r\n      };\r\n    case types.CREATE_MATCH_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case types.UPDATE_MATCH_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case types.UPDATE_MATCH_SUCCESS:\r\n      return { ...state, isLoading: false, match: action.payload };\r\n    case types.UPDATE_MATCH_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case types.REMOVE_MATCH_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case types.REMOVE_MATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        matches: state.matches.filter(m => m._id !== action.payload),\r\n        matchOver: true,\r\n        match: false,\r\n        isLoading: false\r\n      };\r\n    case types.REMOVE_MATCH_FAIL:\r\n      return { ...state, isLoading: false, error: action.payload };\r\n    case types.SET_MATCH_TO_FALSE_REQUEST:\r\n      return { ...state };\r\n    case types.SET_MATCH_TO_FALSE_SUCCESS:\r\n      return { ...state, match: false };\r\n    case types.SET_MATCH_TO_FALSE_FAIL:\r\n      return { ...state };\r\n    case types.GAME_OVER_REQUEST:\r\n      return { ...state };\r\n    case types.GAME_OVER_SUCCESS:\r\n      return { ...state, matchOver: true };\r\n    case types.GAME_OVER_FAIL:\r\n      return { ...state };\r\n    case types.REMOVE_ACTIVE_MATCH:\r\n      return { ...state, match: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}